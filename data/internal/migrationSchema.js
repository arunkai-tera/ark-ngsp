const {
    SchemaModel: model,
    StringType: string,
    NumberType: number,
    BooleanType: bool
} = require("schema-typed");
const defaultSettings = {
    enabled: bool().isRequired(),
    useTestFeatures: bool().isRequired(),
    additionalCombatFixes: bool().isRequired(),
    additionalVisualChanges: bool().isRequired(),
    defaultPingValue: number().isRequired().range(-1, 300),
    fastCastSkillsCalibrationTime: number().isRequired().range(0, 30),
    fastCastBlockCalibrationType: string().isRequired().isOneOf(["none", "jitter", "retry"]),
    jitterCompensation: bool().isRequired(),
    jitterCompensationChargesMax: number().isRequired().range(0, 100),
    jitterCompensationChargesMin: number().isRequired().range(0, 100),
    jitterCompensationMax: number().isRequired().range(0, 70),
    jitterCompensationMin: number().isRequired().range(0, 70),
    resyncReactions: bool().isRequired(),
    resyncZ: bool().isRequired(),
    advancedAbnormals: bool().isRequired(),
    advancedCooldowns: bool().isRequired(),
    advancedProjectiles: bool().isRequired(),
    advancedCC: bool().isRequired(),
    advancedChargesRelease: bool().isRequired(),
    advancedNpcsAttacks: bool().isRequired(),
    skillRetryCount: number().isRequired().range(0, 10),
    skillRetryMs: number().isRequired().range(20, 35),
    backstabsResync: bool().isRequired(),
    backstabsSpoof: bool().isRequired(),
    serverTimeout: number().isRequired().range(100, 10000),
    debugGlyphs: bool().isRequired(),
    debug: bool().isRequired(),
    debugAbnormals: bool().isRequired(),
    debugCooldowns: bool().isRequired(),
    debugAspd: bool().isRequired(),
    debugTalents: bool().isRequired(),
    debugItems: bool().isRequired(),
    debugPolishing: bool().isRequired(),
    debugProjectiles: bool().isRequired(),
    notifications: bool().isRequired(),
    debugLoc: bool().isRequired(),
    version: string().isRequired(),
    pingMethod: string().isRequired().isOneOf(["hybrid", "internal", "external", "static"]),
    language: string().isRequired(),
    ingameUIPing: string().isRequired().isOneOf(["avg", "min", "fake", "none"]),
    pingHistoryMax: number().isRequired().range(10, 150),
    jitterHistoryMax: number().isRequired().range(10, 150),
    pingHelperTimeout: number().isRequired(),
    shortcutEnable: string().isRequiredOrEmpty(),
    shortcutUISettings: string().isRequiredOrEmpty(),
    customCommandPrefix: string().isRequiredOrEmpty()
};
exports.schemaConfig = model(defaultSettings);
const combatSettings = {
    fixFreezeAtPerfectBlock: bool().isRequired(),
    tryResyncNpcs: bool().isRequired(),
    tryResyncPlayers: bool().isRequired(),
    tryResyncNpcsDeath: bool().isRequired(),
    tryResyncPlayersDeath: bool().isRequired(),
    fixDelayedBuffsMe: bool().isRequired(),
    fixDelayedBuffsNpcs: bool().isRequired(),
    preventEmptyBackstabsCasts: bool().isRequired()
};
exports.schemaCombatConfig = model(combatSettings);